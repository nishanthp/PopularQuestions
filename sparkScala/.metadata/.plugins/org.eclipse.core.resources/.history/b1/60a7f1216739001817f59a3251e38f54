package main
import org.apache.spark._
import org.apache.spark.SparkContext._
import org.apache.spark.sql._
import org.apache.log4j._
import org.apache.spark.mllib.linalg.Vectors
import org.apache.spark.mllib.regression.LabeledPoint
import org.apache.spark.mllib.regression.LinearRegressionWithSGD
import org.apache.spark.mllib.optimization.SquaredL2Updater

object LinearRegression1 {
  Logger.getLogger("org").setLevel(Level.ERROR);
  
  val sc = new SparkContext("local[*]","LinearRegression");
  
  val training_data = sc.textFile("../regression.txt");
  
  val testing_data = sc.textFile("../regression.txt");
  
  val labeled_data_traind = training_data.map(x => LabeledPoint.parse(x));
  
  val labeled_data_testing = training_data.map(x => LabeledPoint.parse(x));
  
  val algorithm = new LinearRegressionWithSGD()
       algorithm.optimizer
      .setNumIterations(100)
      .setStepSize(1.0)
      .setUpdater(new SquaredL2Updater())
      .setRegParam(0.01);
  
  // create a model on the training data.
  val model = algorithm.run(labeled_data_traind);
  
  
  
}